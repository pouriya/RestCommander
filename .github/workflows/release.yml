# This is a basic workflow to help you get started with Actions

name: Release

on:
  push:
    tags:
      - "*"
  # Run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  publish:
    name: Publishing for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_postfix: ""

          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            binary_postfix: ""
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-musl
            binary_postfix: ""
          - os: ubuntu-18.04
            target: x86_64-unknown-linux-gnu
            binary_postfix: ""
          - os: ubuntu-18.04
            target: x86_64-unknown-linux-musl
            binary_postfix: ""

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_postfix: ".exe"
          - os: windows-2019
            target: x86_64-pc-windows-msvc
            binary_postfix: ".exe"
          

    steps:
      - name: Installing Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Installing needed ${{ matrix.os }} dependencies
        if: contains(matrix.os, 'macos-')
        run: brew install openssl@1.1
      - name: Installing needed ${{ matrix.os }} dependencies
        if: contains(matrix.os, 'ubuntu-')
        run: |
          sudo apt-get update
          sudo apt-get install -y -qq pkg-config libssl-dev
      - name: Installing needed ${{ matrix.os }} dependencies for `musl`
        if: contains(matrix.os, 'ubuntu-') && contains(matrix.target, '-musl')
        run: |
          sudo apt-get update
          sudo apt-get install -y -qq musl-dev musl-tools
      - name: Checking out sources
        uses: actions/checkout@v1
      - name: Running make
        uses: actions-rs/cargo@v1
        with:
          command: build
          toolchain: stable
          args: --release --target ${{ matrix.target }}

      - name: Packaging final binary
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          ls -lash .
          RELEASE_NAME=restcommander-${{ matrix.artifact_postfix }}
          tar czvf $RELEASE_NAME.tar.gz $BINARY_NAME
          if [[ ${{ runner.os }} == 'Windows' ]]; then
            certutil -hashfile $RELEASE_NAME.tar.gz sha256 | grep -E [A-Fa-f0-9]{64} > $RELEASE_NAME.sha256
          else
            shasum -a 256 $RELEASE_NAME.tar.gz > $RELEASE_NAME.sha256
          fi
      - name: Releasing assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
          #  target/${{ matrix.target }}/release/spotify-tui-${{ matrix.artifact_prefix }}.tar.gz
          #  target/${{ matrix.target }}/release/spotify-tui-${{ matrix.artifact_prefix }}.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
