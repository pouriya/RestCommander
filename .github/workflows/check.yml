name: Check

on: [push, pull_request]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build
        uses: docker/build-push-action@v3
        with:
          push: false

      - name: Build tour
        uses: docker/build-push-action@v3
        with:
          push: false
          file: TourDockerfile

  build:
    name: ${{ matrix.os }} (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-12
            target: x86_64-apple-darwin
          - os: macos-11
            target: x86_64-apple-darwin

          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-musl
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-musl

          - os: windows-2022
            target: x86_64-pc-windows-gnu
          - os: windows-2019
            target: x86_64-pc-windows-gnu

    steps:
      - name: Installing Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Installing macOS dependencies
        if: contains(matrix.os, 'macos-')
        run: |
          brew install openssl@1.1
          brew install make

      - name: Installing Linux dependencies
        if: contains(matrix.os, 'ubuntu-')
        run: |
          sudo apt-get update
          sudo apt-get install -y -qq pkg-config libssl-dev liblzma-dev dpkg dpkg-dev
          cargo install cargo-deb

      - name: Installing Windows dependencies
        if: contains(matrix.os, 'windows-')
        run: |
          rustup target add ${{ matrix.target }}

      - name: Installing Linux dependencies for `musl`
        if: contains(matrix.os, 'ubuntu-') && contains(matrix.target, '-musl')
        run: |
          sudo apt-get update
          sudo apt-get install -y -qq musl-dev musl-tools
          rustup target add ${{ matrix.target }}

      - name: Checking out sources
        uses: actions/checkout@v1

      - name: Lint
        run: make lint VERSION=test TARGET=${{ matrix.target }}

      - name: Build
        run: make release VERSION=test TARGET=${{ matrix.target }} RELEASE_FILENAME_POSTFIX=-${{ matrix.os }}

      - name: Test
        run: make test VERSION=test TARGET=${{ matrix.target }}

      - name: Build Debian package
        if: contains(matrix.os, 'ubuntu-')
        shell: bash
        run: make deb VERSION=test TARGET=${{ matrix.target }} RELEASE_FILENAME_POSTFIX=-${{ matrix.os }}

      - name: Rename Windows executable
        if: contains(matrix.os, 'windows-')
        shell: bash
        run: |
          NAME=`ls restcommander-*` 
          mv $NAME `echo $NAME | sed 's/.exe//'`.exe

      - name: Archive Linux artifacts
        if: contains(matrix.os, 'ubuntu-')
        uses: actions/upload-artifact@v3
        with:
          name: linux-releases
          path: restcommander-*
          retention-days: 10

      - name: Archive Windows artifacts
        if: contains(matrix.os, 'windows-')
        uses: actions/upload-artifact@v3
        with:
          name: windows-releases
          path: restcommander-*
          retention-days: 10

      - name: Archive macOS artifacts
        if: contains(matrix.os, 'macos-')
        uses: actions/upload-artifact@v3
        with:
          name: macos-releases
          path: restcommander-*
          retention-days: 10
